/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    media: Media;
    portraits: Portrait;
    pages: Page;
    newsletters: Newsletter;
    news: News;
    teachers: Teacher;
    cards: Card;
    donations: Donation;
    quotes: Quote;
    "payload-preferences": PayloadPreference;
    "payload-migrations": PayloadMigration;
  };
  globals: {
    header: Header;
    siteTitle: SiteTitle;
    introText: IntroText;
    prominence: Prominence;
    activities: Activity;
    footer: Footer;
  };
}
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
export interface Portrait {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
export interface Page {
  id: string;
  slug: string;
  title: string;
  content: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  };
  contentHtml?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Newsletter {
  id: string;
  body?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  bodyHtml?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface News {
  id: string;
  headline: string;
  body: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  };
  image: string | Media;
  bodyHtml?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Teacher {
  id: string;
  name: string;
  roles: {
    role?: string | null;
    id?: string | null;
  }[];
  orderOfAppearance: number;
  portrait: string | Portrait;
  bio: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  };
  bioHtml?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Card {
  id: string;
  header: string;
  body: string;
  image: string | Media;
  link: string | Page;
  updatedAt: string;
  createdAt: string;
}
export interface Donation {
  id: string;
  headline: string;
  description: string;
  image: string | Media;
  goal: number;
  updatedAt: string;
  createdAt: string;
}
export interface Quote {
  id: string;
  title: string;
  quote: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  };
  quoteHtml?: string | null;
  addSourceLanguage?: boolean | null;
  originalQuote?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  originalQuoteHtml?: string | null;
  originalQuoteLang?: string | null;
  source?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: "users";
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
      [k: string]: unknown;
    }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface Header {
  id: string;
  navigation: {
    page: string | Page;
    id?: string | null;
  }[];
  logo: string | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface SiteTitle {
  id: string;
  title: string;
  secondaryTitle?: string | null;
  logo?: string | Media | null;
  subheading?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface IntroText {
  id: string;
  body: string;
  buttonLink: string | Page;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface Prominence {
  id: string;
  photo: string | Portrait;
  photoCaption: string;
  mainText: string;
  isQuote?: boolean | null;
  quoteSource?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface Activity {
  id: string;
  description?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  image: string | Media;
  descriptionHtml?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface Footer {
  id: string;
  address?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ("ltr" | "rtl") | null;
      format: "left" | "start" | "center" | "right" | "end" | "justify" | "";
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  email?: string | null;
  phone?: string | null;
  blessing?: string | null;
  addressHtml?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}

