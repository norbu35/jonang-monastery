---
import { Image } from "astro:assets";
import type { Header } from "../../payload-types";

import upArrow from "../assets/icons/up-arrow.svg";

let data: Header;
try {
  const response = await fetch(`${import.meta.env.CMS_API_URL}/globals/header`);
  if (!response.ok) {
    throw Error("error fetching data");
  }
  data = await response.json();
} catch (error: any) {
  throw Error(error.message);
}
---

<header
  id="header"
  class="opacity-1 fixed bottom-0 z-10 flex h-16 max-h-16 w-full flex-col justify-between bg-white p-2 transition md:top-0 md:h-20 md:max-h-20 md:justify-between md:shadow-lg lg:h-24 lg:max-h-24"
>
  <!-- Mobile menu -->
  <div
    id="menu"
    class="flex h-0 flex-col items-end overflow-hidden font-semibold text-gray-600 transition"
  >
    <ul
      class="bottom-0 flex h-full w-full origin-bottom list-none flex-col items-center justify-center font-headerLinks"
    >
      {
        data.navigation.map((field: any) => (
          <li class="text-xl hover:text-yellow-500">
            {field.link ? (
              <a href={`/${field.link.slug}`}>{field.link.title}</a>
            ) : (
              field.label
            )}
          </li>
        ))
      }
      <button
        class="secondary-button rounded bg-yellow-500 text-gray-700 drop-shadow-lg hover:bg-yellow-600 lg:h-12 lg:text-[18px]"
        >Donate</button
      >
    </ul>
  </div>
  <div class="flex h-[48px] w-full items-center justify-between md:h-full">
    <!-- Logo -->
    <div class="basis-3/4 md:basis-1/3">
      <a href="/" class="flex items-center justify-start gap-4">
        <div class="md:w-18 w-14 lg:w-20">
          {
            typeof data.logo !== "string" ? (
              <Image
                src={data!.logo.url!}
                alt={data.logo.alt}
                width={data.logo.width!}
                height={data.logo.height!}
                class="float-right w-[80%]"
              />
            ) : (
              <div>Error fetching data</div>
            )
          }
        </div>
        <div class="font-siteTitle text-gray-700 md:text-xl">
          Jonang Takten<br /> Phuntsok Choeling
        </div>
      </a>
    </div>
    <!-- Large menu -->
    <div
      id="menu"
      class="hidden h-0 items-center overflow-hidden font-semibold text-gray-600 md:mr-2 md:flex md:md:h-full xl:mr-12 xl:text-xl"
    >
      <ul
        class="my-0 list-none items-center gap-3 font-headerLinks md:flex lg:gap-4 xl:gap-6"
      >
        {
          data.navigation.map((field: any) => (
            <li class="hover:text-yellow-500">
              {field.link ? (
                <a href={`/${field.link.slug}`}>{field.link.title}</a>
              ) : (
                field.label
              )}
            </li>
          ))
        }
        <button
          class="secondary-button rounded bg-yellow-500 text-gray-700 drop-shadow-lg hover:bg-yellow-600 lg:h-12 lg:text-[18px]"
          >Donate</button
        >
      </ul>
    </div>
    <button
      class="hide max-h-[35px] transition-all duration-500 ease-in-out motion-reduce:transition-none"
      id="topButton"><Image src={upArrow} alt="Up arrow icon" /></button
    >
    <button id="menuButton" class="group relative">
      <div
        class="relative flex h-[50px] w-[50px] transform items-center justify-center overflow-hidden transition-all duration-200"
      >
        <div
          class="flex h-[21px] w-[28px] origin-center transform flex-col justify-between overflow-hidden transition-all duration-300"
        >
          <div
            class="h-[3px] w-9 origin-left transform rounded-xl bg-black transition-all duration-300 group-focus:translate-x-10"
          >
          </div>
          <div
            class="h-[3px] w-9 transform rounded-xl bg-black transition-all delay-75 duration-300 group-focus:translate-x-10"
          >
          </div>
          <div
            class="h-[3px] w-9 origin-left transform rounded-xl bg-black transition-all delay-150 duration-300 group-focus:translate-x-10"
          >
          </div>

          <div
            class="absolute top-2.5 flex w-0 -translate-x-10 transform items-center justify-between transition-all duration-500 group-focus:w-14 group-focus:translate-x-0"
          >
            <div
              class="absolute h-[3px] w-7 rotate-0 transform bg-black transition-all delay-300 duration-500 group-focus:rotate-45"
            >
            </div>
            <div
              class="absolute h-[3px] w-7 -rotate-0 transform bg-black transition-all delay-300 duration-500 group-focus:-rotate-45"
            >
            </div>
          </div>
        </div>
      </div>
    </button>
    <!-- <button id="menuButton" -->
    <!--   ><Image src={hamburgerMenu} alt="Hamburger menu icon" /></button -->
    <!-- > -->
  </div>
</header>

<script>
  const header = document.querySelector("#header")!;
  const menu = document.querySelector("#menu")!;
  const menuButton: HTMLElement = document.querySelector("#menuButton")!;
  const topButton = document.querySelector("#topButton")!;

  let prevScrollPos = window.scrollY;

  function handleScroll() {
    const currentScrollPos = window.scrollY;
    const scrollingUp = currentScrollPos < prevScrollPos;

    header.classList.toggle("hide", !scrollingUp);
    header.setAttribute("aria-hidden", scrollingUp ? "false" : "true");

    prevScrollPos = currentScrollPos;

    topButton.classList.toggle(
      "hide",
      currentScrollPos <= window.innerHeight / 2,
    );
  }

  function scrollToTop() {
    scrollTo({
      top: 0,
      behavior: "smooth",
    });
  }

  function toggleMenu() {
    const isMenuOpen = header.classList.contains("h-screen");

    if (!isMenuOpen) {
      document.body.classList.add("stop-scrolling");
      header.classList.add("h-screen", "max-h-full");
      menu.classList.add("h-full");
      menu.addEventListener("click", handleMenuClick);
    } else {
      document.body.classList.remove("stop-scrolling");
      menuButton.blur();
      menu.classList.remove("h-full");
      header.classList.remove("h-screen", "max-h-full");
      setTimeout(() => {
        header.classList.add("max-h-16");
      }, 500);
    }
  }

  function handleMenuClick(event: Event) {
    event.stopPropagation();
    toggleMenu();
  }

  window.addEventListener("scroll", handleScroll);
  topButton.addEventListener("click", scrollToTop);
  menuButton.addEventListener("click", toggleMenu);
</script>
